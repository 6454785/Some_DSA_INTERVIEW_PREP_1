#include<bits/stdc++.h>

int pivotFinding(std::vector<int>& arr,int n){
int s=0;
int e=n-1;
int mid= s + (e-s)/2;
while(s<e){
    if(arr[mid]>=arr[0]){
        s=mid+1;
    }
    else{
        e=mid;
    }
    mid=s+(e-s)/2;
}
return e;
}

int BinarySearch(std::vector<int>& arr,int s,int e,int key){
    int start=s;
    int end=e;
    int mid=(s+e)/2;
    while(s<=e){
        if(arr[mid]==key){
            return mid;
        }
        if(key>arr[mid]){
            s=mid+1;
        }
        else
        {
            e=mid-1;
        }
        mid=(s+e)/2;
        
    }
    return -1;

}

int findPosition(std::vector<int>& arr, int n, int k)
{
    int pivot=pivotFinding(arr,n);
    if(k>=arr[pivot] && k<=arr[n-1]){
       return  BinarySearch(arr,pivot,n-1,k);
    }
    else{
        return  BinarySearch(arr,0,pivot-1,k);
    }
}

